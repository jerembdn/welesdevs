plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'com.onruntime.welesdevs'
version = '1.0'
compileJava.options.encoding = 'UTF-8'

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        name "destroystokyo-repository"
        url "https://destroystokyo.com/repo/repository/maven-public/"
    }
    maven {
        name "md_5-repository"
        url "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        url = 'https://ncbr.tech/repo/'
    }
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        url = 'https://oss.sonatype.org/content/repositories/central'
    }
    maven {
        url 'https://jitpack.io/'
    }
}

dependencies {
    // Minecraft
    shadow group: 'org.spigotmc', name: 'spigot-api', version: '1.18.2-R0.1-SNAPSHOT'
    compileOnly fileTree(include: ['*.jar'], dir: 'libs')

    // Utilities
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    compileOnly group: 'com.google.guava', name: 'guava', version: '26.0-jre'
    compileOnly group: 'org.apache.commons', name: 'commons-lang3', version: '3.8'
    compileOnly group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.6.2'
    compileOnly group: 'ninja.leaping.configurate', name: 'configurate-hocon', version: '3.3'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
